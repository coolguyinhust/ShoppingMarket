一、信息系统的开发架构

客户层-------显示层-------业务层---------数据层---------数据库

1.客户层：客户层就是客户端，简单的来说就是浏览器。

2.显示层：JSP/Servlet，用于给浏览器显示。

3.业务层：对于数据层的原子操作进行整合。

4.数据层：对于数据库进行的原子操作，增加、删除等；

DAO(Data Access Object)：
	DAO应用在数据层那块,用于访问数据库，对数据库进行操作的类。
	DAO层主要是做数据持久层的工作，负责与数据库进行联络的一些任务都封装在此，
	DAO层的设计首先是设计DAO的接口，然后在Spring的配置文件中定义此接口的实现类，
	然后就可在模块中调用此接口来进行数据业务的处理，而不用关心此接口的具体实现类是哪个类，
	显得结构非常清晰，DAO层的数据源配置，以及有关数据库连接的参数都在Spring的配置文件中进行配置。   
三、DAO设计模式的结构

DAO设计模式一般分为几个类：

1.VO(Value Object)：一个用于存放网页的一行数据即一条记录的类，比如网页要显示一个用户的信息，则这个类就是用户的类。

2.DatabaseConnection：用于打开和关闭数据库。

3.DAO接口：用于声明对于数据库的操作。

4.DAOImpl：必须实现DAO接口，真实实现DAO接口的函数，但是不包括数据库的打开和关闭。

5.DAOProxy：也是实现DAO接口，但是只需要借助DAOImpl即可，但是包括数据库的打开和关闭。

6.DAOFactory：工厂类，含有getInstance()创建一个Proxy类。

MVC模型实现（Jsp+Servlet+DAO)
创建购物车类，编写Servlet调用购物车类，创建页面层。